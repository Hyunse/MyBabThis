package simple.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * 사용자 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Users implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 회원아이디. */
	private String userId;

	/** 회원패스워드. */
	private String userPass;

	/** 회원닉네임. */
	private String userName;

	/** 회원이메일. */
	private String userEmail;

	/** 회원성별. */
	private String userGender;

	/** 회원전화번호. */
	private String userPhone;

	/** 회원가입일. */
	private Date userRegdate;

	/** 회원정보수정날짜. */
	private Date userUpdatedate;

	/** 회원등급. */
	private String userGrade;

	/** 회원활성화여부. */
	private String userActivation;

	/** 회원사진. */
	private String userImage;

	/** 게시판 목록. */
	private Set<Boards> boardsSet;

	/** 댓글게시판 목록. */
	private Set<ReplyBoard> replyBoardSet;

	/** 맛집게시판 목록. */
	private Set<Restaurants> restaurantsSet;

	/** 즐겨찾기 목록. */
	private Set<Favorite> favoriteSet;

	/** 리뷰게시판 목록. */
	private Set<ReviewBoard> reviewBoardSet;

	/** 자격증취득회원 목록. */
	private Set<LicensedUser> licensedUserSet;

	/** 관심지역 목록. */
	private Set<FavoriteLocation> favoriteLocationSet;

	/** 친구 목록. */
	private Set<Friend> friendSet;

	/** 게시글댓글 목록. */
	private Set<Replys> replysSet;

	/**
	 * 생성자.
	 */
	public Users() {
		this.boardsSet = new HashSet<Boards>();
		this.favoriteSet = new HashSet<Favorite>();
		this.favoriteLocationSet = new HashSet<FavoriteLocation>();
		this.friendSet = new HashSet<Friend>();
		this.licensedUserSet = new HashSet<LicensedUser>();
		this.replyBoardSet = new HashSet<ReplyBoard>();
		this.replysSet = new HashSet<Replys>();
		this.restaurantsSet = new HashSet<Restaurants>();
		this.reviewBoardSet = new HashSet<ReviewBoard>();
	}

	/**
	 * 회원아이디을 설정합니다..
	 * 
	 * @param userId
	 *            회원아이디
	 */
	public void setUserId(String userId) {
		this.userId = userId;
	}

	/**
	 * 회원아이디을 가져옵니다..
	 * 
	 * @return 회원아이디
	 */
	public String getUserId() {
		return this.userId;
	}

	/**
	 * 회원패스워드을 설정합니다..
	 * 
	 * @param userPass
	 *            회원패스워드
	 */
	public void setUserPass(String userPass) {
		this.userPass = userPass;
	}

	/**
	 * 회원패스워드을 가져옵니다..
	 * 
	 * @return 회원패스워드
	 */
	public String getUserPass() {
		return this.userPass;
	}

	/**
	 * 회원닉네임을 설정합니다..
	 * 
	 * @param userName
	 *            회원닉네임
	 */
	public void setUserName(String userName) {
		this.userName = userName;
	}

	/**
	 * 회원닉네임을 가져옵니다..
	 * 
	 * @return 회원닉네임
	 */
	public String getUserName() {
		return this.userName;
	}

	/**
	 * 회원이메일을 설정합니다..
	 * 
	 * @param userEmail
	 *            회원이메일
	 */
	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	/**
	 * 회원이메일을 가져옵니다..
	 * 
	 * @return 회원이메일
	 */
	public String getUserEmail() {
		return this.userEmail;
	}

	/**
	 * 회원성별을 설정합니다..
	 * 
	 * @param userGender
	 *            회원성별
	 */
	public void setUserGender(String userGender) {
		this.userGender = userGender;
	}

	/**
	 * 회원성별을 가져옵니다..
	 * 
	 * @return 회원성별
	 */
	public String getUserGender() {
		return this.userGender;
	}

	/**
	 * 회원전화번호을 설정합니다..
	 * 
	 * @param userPhone
	 *            회원전화번호
	 */
	public void setUserPhone(String userPhone) {
		this.userPhone = userPhone;
	}

	/**
	 * 회원전화번호을 가져옵니다..
	 * 
	 * @return 회원전화번호
	 */
	public String getUserPhone() {
		return this.userPhone;
	}

	/**
	 * 회원가입일을 설정합니다..
	 * 
	 * @param userRegdate
	 *            회원가입일
	 */
	public void setUserRegdate(Date userRegdate) {
		this.userRegdate = userRegdate;
	}

	/**
	 * 회원가입일을 가져옵니다..
	 * 
	 * @return 회원가입일
	 */
	public Date getUserRegdate() {
		return this.userRegdate;
	}

	/**
	 * 회원정보수정날짜을 설정합니다..
	 * 
	 * @param userUpdatedate
	 *            회원정보수정날짜
	 */
	public void setUserUpdatedate(Date userUpdatedate) {
		this.userUpdatedate = userUpdatedate;
	}

	/**
	 * 회원정보수정날짜을 가져옵니다..
	 * 
	 * @return 회원정보수정날짜
	 */
	public Date getUserUpdatedate() {
		return this.userUpdatedate;
	}

	/**
	 * 회원등급을 설정합니다..
	 * 
	 * @param userGrade
	 *            회원등급
	 */
	public void setUserGrade(String userGrade) {
		this.userGrade = userGrade;
	}

	/**
	 * 회원등급을 가져옵니다..
	 * 
	 * @return 회원등급
	 */
	public String getUserGrade() {
		return this.userGrade;
	}

	/**
	 * 회원활성화여부을 설정합니다..
	 * 
	 * @param userActivation
	 *            회원활성화여부
	 */
	public void setUserActivation(String userActivation) {
		this.userActivation = userActivation;
	}

	/**
	 * 회원활성화여부을 가져옵니다..
	 * 
	 * @return 회원활성화여부
	 */
	public String getUserActivation() {
		return this.userActivation;
	}

	/**
	 * 회원사진을 설정합니다..
	 * 
	 * @param userImage
	 *            회원사진
	 */
	public void setUserImage(String userImage) {
		this.userImage = userImage;
	}

	/**
	 * 회원사진을 가져옵니다..
	 * 
	 * @return 회원사진
	 */
	public String getUserImage() {
		return this.userImage;
	}

	/**
	 * 게시판 목록을 설정합니다..
	 * 
	 * @param boardsSet
	 *            게시판 목록
	 */
	public void setBoardsSet(Set<Boards> boardsSet) {
		this.boardsSet = boardsSet;
	}

	/**
	 * 게시판를 추가합니다..
	 * 
	 * @param boards
	 *            게시판
	 */
	public void addBoards(Boards boards) {
		this.boardsSet.add(boards);
	}

	/**
	 * 게시판 목록을 가져옵니다..
	 * 
	 * @return 게시판 목록
	 */
	public Set<Boards> getBoardsSet() {
		return this.boardsSet;
	}

	/**
	 * 댓글게시판 목록을 설정합니다..
	 * 
	 * @param replyBoardSet
	 *            댓글게시판 목록
	 */
	public void setReplyBoardSet(Set<ReplyBoard> replyBoardSet) {
		this.replyBoardSet = replyBoardSet;
	}

	/**
	 * 댓글게시판를 추가합니다..
	 * 
	 * @param replyBoard
	 *            댓글게시판
	 */
	public void addReplyBoard(ReplyBoard replyBoard) {
		this.replyBoardSet.add(replyBoard);
	}

	/**
	 * 댓글게시판 목록을 가져옵니다..
	 * 
	 * @return 댓글게시판 목록
	 */
	public Set<ReplyBoard> getReplyBoardSet() {
		return this.replyBoardSet;
	}

	/**
	 * 맛집게시판 목록을 설정합니다..
	 * 
	 * @param restaurantsSet
	 *            맛집게시판 목록
	 */
	public void setRestaurantsSet(Set<Restaurants> restaurantsSet) {
		this.restaurantsSet = restaurantsSet;
	}

	/**
	 * 맛집게시판를 추가합니다..
	 * 
	 * @param restaurants
	 *            맛집게시판
	 */
	public void addRestaurants(Restaurants restaurants) {
		this.restaurantsSet.add(restaurants);
	}

	/**
	 * 맛집게시판 목록을 가져옵니다..
	 * 
	 * @return 맛집게시판 목록
	 */
	public Set<Restaurants> getRestaurantsSet() {
		return this.restaurantsSet;
	}

	/**
	 * 즐겨찾기 목록을 설정합니다..
	 * 
	 * @param favoriteSet
	 *            즐겨찾기 목록
	 */
	public void setFavoriteSet(Set<Favorite> favoriteSet) {
		this.favoriteSet = favoriteSet;
	}

	/**
	 * 즐겨찾기를 추가합니다..
	 * 
	 * @param favorite
	 *            즐겨찾기
	 */
	public void addFavorite(Favorite favorite) {
		this.favoriteSet.add(favorite);
	}

	/**
	 * 즐겨찾기 목록을 가져옵니다..
	 * 
	 * @return 즐겨찾기 목록
	 */
	public Set<Favorite> getFavoriteSet() {
		return this.favoriteSet;
	}

	/**
	 * 리뷰게시판 목록을 설정합니다..
	 * 
	 * @param reviewBoardSet
	 *            리뷰게시판 목록
	 */
	public void setReviewBoardSet(Set<ReviewBoard> reviewBoardSet) {
		this.reviewBoardSet = reviewBoardSet;
	}

	/**
	 * 리뷰게시판를 추가합니다..
	 * 
	 * @param reviewBoard
	 *            리뷰게시판
	 */
	public void addReviewBoard(ReviewBoard reviewBoard) {
		this.reviewBoardSet.add(reviewBoard);
	}

	/**
	 * 리뷰게시판 목록을 가져옵니다..
	 * 
	 * @return 리뷰게시판 목록
	 */
	public Set<ReviewBoard> getReviewBoardSet() {
		return this.reviewBoardSet;
	}

	/**
	 * 자격증취득회원 목록을 설정합니다..
	 * 
	 * @param licensedUserSet
	 *            자격증취득회원 목록
	 */
	public void setLicensedUserSet(Set<LicensedUser> licensedUserSet) {
		this.licensedUserSet = licensedUserSet;
	}

	/**
	 * 자격증취득회원를 추가합니다..
	 * 
	 * @param licensedUser
	 *            자격증취득회원
	 */
	public void addLicensedUser(LicensedUser licensedUser) {
		this.licensedUserSet.add(licensedUser);
	}

	/**
	 * 자격증취득회원 목록을 가져옵니다..
	 * 
	 * @return 자격증취득회원 목록
	 */
	public Set<LicensedUser> getLicensedUserSet() {
		return this.licensedUserSet;
	}

	/**
	 * 관심지역 목록을 설정합니다..
	 * 
	 * @param favoriteLocationSet
	 *            관심지역 목록
	 */
	public void setFavoriteLocationSet(Set<FavoriteLocation> favoriteLocationSet) {
		this.favoriteLocationSet = favoriteLocationSet;
	}

	/**
	 * 관심지역를 추가합니다..
	 * 
	 * @param favoriteLocation
	 *            관심지역
	 */
	public void addFavoriteLocation(FavoriteLocation favoriteLocation) {
		this.favoriteLocationSet.add(favoriteLocation);
	}

	/**
	 * 관심지역 목록을 가져옵니다..
	 * 
	 * @return 관심지역 목록
	 */
	public Set<FavoriteLocation> getFavoriteLocationSet() {
		return this.favoriteLocationSet;
	}

	/**
	 * 친구 목록을 설정합니다..
	 * 
	 * @param friendSet
	 *            친구 목록
	 */
	public void setFriendSet(Set<Friend> friendSet) {
		this.friendSet = friendSet;
	}

	/**
	 * 친구를 추가합니다..
	 * 
	 * @param friend
	 *            친구
	 */
	public void addFriend(Friend friend) {
		this.friendSet.add(friend);
	}

	/**
	 * 친구 목록을 가져옵니다..
	 * 
	 * @return 친구 목록
	 */
	public Set<Friend> getFriendSet() {
		return this.friendSet;
	}

	/**
	 * 게시글댓글 목록을 설정합니다..
	 * 
	 * @param replysSet
	 *            게시글댓글 목록
	 */
	public void setReplysSet(Set<Replys> replysSet) {
		this.replysSet = replysSet;
	}

	/**
	 * 게시글댓글를 추가합니다..
	 * 
	 * @param replys
	 *            게시글댓글
	 */
	public void addReplys(Replys replys) {
		this.replysSet.add(replys);
	}

	/**
	 * 게시글댓글 목록을 가져옵니다..
	 * 
	 * @return 게시글댓글 목록
	 */
	public Set<Replys> getReplysSet() {
		return this.replysSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Users other = (Users) obj;
		if (userId == null) {
			if (other.userId != null) {
				return false;
			}
		} else if (!userId.equals(other.userId)) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return "Users [userId=" + userId + ", userPass=" + userPass
				+ ", userName=" + userName + ", userEmail=" + userEmail
				+ ", userGender=" + userGender + ", userPhone=" + userPhone
				+ ", userRegdate=" + userRegdate + ", userUpdatedate="
				+ userUpdatedate + ", userGrade=" + userGrade
				+ ", userActivation=" + userActivation + ", userImage="
				+ userImage + "]";
	}
	

}
